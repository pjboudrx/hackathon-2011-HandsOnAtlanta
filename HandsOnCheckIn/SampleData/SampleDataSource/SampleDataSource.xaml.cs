//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.SampleData.SampleDataSource
{
	using System; 

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class SampleDataSource { }
#else

	public class SampleDataSource : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public SampleDataSource()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/HandsOnCheckIn;component/SampleData/SampleDataSource/SampleDataSource.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					System.Windows.Application.LoadComponent(this, resourceUri);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private Projects _Projects = new Projects();

		public Projects Projects
		{
			get
			{
				return this._Projects;
			}
		}

		private Volunteers _Volunteers = new Volunteers();

		public Volunteers Volunteers
		{
			get
			{
				return this._Volunteers;
			}
		}
	}

	public class ProjectsItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private string _Date = string.Empty;

		public string Date
		{
			get
			{
				return this._Date;
			}

			set
			{
				if (this._Date != value)
				{
					this._Date = value;
					this.OnPropertyChanged("Date");
				}
			}
		}

		private string _Location = string.Empty;

		public string Location
		{
			get
			{
				return this._Location;
			}

			set
			{
				if (this._Location != value)
				{
					this._Location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
	}

	public class Projects : System.Collections.ObjectModel.ObservableCollection<ProjectsItem>
	{ 
	}

	public class VolunteersItem : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		private string _Name = string.Empty;

		public string Name
		{
			get
			{
				return this._Name;
			}

			set
			{
				if (this._Name != value)
				{
					this._Name = value;
					this.OnPropertyChanged("Name");
				}
			}
		}

		private string _InTime = string.Empty;

		public string InTime
		{
			get
			{
				return this._InTime;
			}

			set
			{
				if (this._InTime != value)
				{
					this._InTime = value;
					this.OnPropertyChanged("InTime");
				}
			}
		}

		private string _OutTime = string.Empty;

		public string OutTime
		{
			get
			{
				return this._OutTime;
			}

			set
			{
				if (this._OutTime != value)
				{
					this._OutTime = value;
					this.OnPropertyChanged("OutTime");
				}
			}
		}

		private bool _CheckedIn = false;

		public bool CheckedIn
		{
			get
			{
				return this._CheckedIn;
			}

			set
			{
				if (this._CheckedIn != value)
				{
					this._CheckedIn = value;
					this.OnPropertyChanged("CheckedIn");
				}
			}
		}
	}

	public class Volunteers : System.Collections.ObjectModel.ObservableCollection<VolunteersItem>
	{ 
	}
#endif
}
